@use "../../../variables" as *;
@use "sass:color";

.serverGenerator {
  min-height: 100vh;
  background-color: rgba($dark-bg, 0.5);
  color: $text-primary;
  padding: 2rem 1rem;
  padding-top: 9rem;
  background-size: cover;
  background-position: center;
  background-blend-mode: overlay;
  position: relative;
  
  // Enable smooth scrolling and improve touch performance
  -webkit-overflow-scrolling: touch;
  scroll-behavior: smooth;

  // Ultra-narrow screens (foldable devices like Z Flip 5)
  @media (max-width: 380px) {
    padding: 1rem 0.5rem;
    padding-top: 8rem;
    
    // Prevent horizontal scrolling issues
    overflow-x: hidden;
    width: 100%;
    max-width: 100vw;
  }
}

.container {
  max-width: 1300px;
  margin: 0 auto;
  padding: 3rem 3rem 2rem 3rem;
  position: relative;
  z-index: 1;
  background-color: rgba($dark-bg, 0.8);
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
  border: 1px solid $border-color;
  border-radius: 12px;

  // Mobile optimization
  @media (max-width: 640px) {
    padding: 2rem 1.5rem 1.5rem 1.5rem;
    margin: 0 0.5rem;
  }

  // Ultra-narrow screens (foldable devices)
  @media (max-width: 380px) {
    padding: 1.5rem 1rem 1rem 1rem;
    margin: 0 0.25rem;
    border-radius: 8px;
  }
}

.header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 2.5rem;
  padding-bottom: 1.5rem;
  border-bottom: 3px solid rgba($accent-blue, 0.3);

  @media (max-width: 640px) {
    flex-direction: column;
    align-items: flex-start;
    gap: 1rem;
  }
}

.pageTitle {
  font-size: 2.5rem;
  font-weight: 700;
  color: $accent-blue;
  font-family: var(--font-press-start);
  text-shadow: 2px 2px 0px rgba(0, 0, 0, 0.5);
  letter-spacing: -0.5px;

  // Mobile responsive font sizes
  @media (max-width: 640px) {
    font-size: 1.8rem;
  }

  // Ultra-narrow screens (foldable devices)
  @media (max-width: 380px) {
    font-size: 1.4rem;
    letter-spacing: -0.3px;
    line-height: 1.3;
  }
}

.formSection {
  background-color: $dark-card;
  padding: 2rem;
  border-radius: 12px;
  margin-bottom: 2rem;
  border: 1px solid $border-color;
  box-shadow: 0 8px 24px rgba(0, 0, 0, 0.25);
  position: relative;
  overflow: hidden;
  
  // CSS Custom Properties for dynamic theming
  --select-bg: #{rgba($dark-bg, 0.8)};
  --select-border: #{$border-color};
  --select-accent: #{$accent-blue};
  --select-text: #{$text-primary};
  --select-hover-bg: #{rgba($dark-bg, 0.85)};
  --select-focus-bg: #{rgba($dark-bg, 0.95)};
  
  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 4px;
    background: linear-gradient(90deg, $accent-blue, darken($accent-blue, 20%));
  }

  // Mobile optimizations
  @media (max-width: 640px) {
    padding: 1.5rem;
    margin-bottom: 1.5rem;
  }

  // Ultra-narrow screens (foldable devices)
  @media (max-width: 380px) {
    padding: 1rem;
    margin-bottom: 1rem;
    border-radius: 8px;
  }
  
  // Enhanced dropdown animation container
  .dropdown-container {
    position: relative;
    overflow: visible;
    
    &::after {
      content: '';
      position: absolute;
      top: 100%;
      left: 0;
      right: 0;
      height: 2px;
      background: linear-gradient(90deg, 
        transparent, 
        rgba($accent-blue, 0.3), 
        transparent);
      opacity: 0;
      transition: opacity 0.3s ease;
    }
    
    &:has(select:focus)::after {
      opacity: 1;
    }
  }
}

.sectionTitle {
  font-size: 1.5rem;
  margin-bottom: 1.5rem;
  color: $text-primary;
  font-family: var(--font-press-start);
  letter-spacing: -0.5px;

  // Mobile responsive font sizes
  @media (max-width: 640px) {
    font-size: 1.2rem;
    margin-bottom: 1rem;
  }

  // Ultra-narrow screens (foldable devices)
  @media (max-width: 380px) {
    font-size: 1rem;
    margin-bottom: 0.75rem;
    letter-spacing: -0.3px;
  }
}

.formGroup {
  margin-bottom: 1.5rem;
  position: relative; // For potential custom dropdown positioning

  // Ultra-narrow screens adjustments
  @media (max-width: 380px) {
    margin-bottom: 1rem;
  }

  label {
    display: block;
    margin-bottom: 0.5rem;
    font-weight: 500;
    color: $text-primary;
    font-family: var(--font-poppins);
    font-size: 0.95rem;
    letter-spacing: 0.5px;
    position: relative;

    // Mobile font size adjustments
    @media (max-width: 380px) {
      font-size: 0.9rem;
      margin-bottom: 0.4rem;
    }
    
    // Add a subtle accent for required fields
    &[for$="name"]::after {
      content: ' *';
      color: $accent-red;
      font-weight: 600;
    }
  }

  // Custom dropdown wrapper for additional styling options
  &.select-wrapper {
    position: relative;
    
    &::after {
      content: '';
      position: absolute;
      top: 50%;
      right: 15px;
      width: 0;
      height: 0;
      border-left: 5px solid transparent;
      border-right: 5px solid transparent;
      border-top: 6px solid $accent-blue;
      transform: translateY(-50%);
      pointer-events: none;
      transition: all 0.3s ease;
    }
    
    &:hover::after {
      border-top-color: lighten($accent-blue, 10%);
      transform: translateY(-50%) scale(1.1);
    }
    
    select:focus + &::after {
      border-top-color: lighten($accent-blue, 15%);
      transform: translateY(-50%) rotate(180deg);
    }
  }

  // Enhanced styling for form groups with selects
  &:has(select) {
    .select-enhancement {
      position: relative;
      
      &::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: linear-gradient(135deg, 
          rgba($accent-blue, 0.05) 0%, 
          rgba($accent-blue, 0.02) 50%, 
          rgba($accent-blue, 0.05) 100%);
        border-radius: 6px;
        opacity: 0;
        transition: opacity 0.3s ease;
        pointer-events: none;
      }
      
      &:hover::before {
        opacity: 1;
      }
    }
  }

  input, textarea {
    width: 100%;
    padding: 0.75rem 1rem;
    border-radius: 6px;
    border: 1px solid $border-color;
    background-color: rgba($dark-bg, 0.7);
    color: $text-primary;
    transition: all 0.3s ease;
    font-family: var(--font-poppins);
    min-height: 44px; // Consistent minimum height
    box-sizing: border-box; // Include padding in width calculation

    // Better mobile input handling
    @media (max-width: 380px) {
      padding: 0.75rem 0.85rem;
      font-size: 16px; // Prevent zoom on iOS
      border-radius: 6px;
      min-height: 48px; // Slightly larger for better touch
    }

    &:focus {
      border-color: $accent-blue;
      outline: none;
      box-shadow: 0 0 0 2px rgba($accent-blue, 0.3);
    }
    
    &:hover:not(:focus) {
      border-color: lighten($border-color, 10%);
    }
  }

  // Enhanced Select Dropdown Styling
  select {
    width: 100%;
    padding: 0.75rem 1rem;
    padding-right: 2.5rem; // Space for custom arrow
    border-radius: 6px;
    border: 1px solid $border-color;
    background-color: rgba($dark-bg, 0.8);
    background-image: 
      linear-gradient(45deg, transparent 50%, $accent-blue 50%),
      linear-gradient(135deg, $accent-blue 50%, transparent 50%);
    background-position: 
      calc(100% - 15px) calc(1em + 2px),
      calc(100% - 10px) calc(1em + 2px);
    background-size: 
      5px 5px,
      5px 5px;
    background-repeat: no-repeat;
    color: $text-primary;
    transition: all 0.3s ease;
    font-family: var(--font-poppins);
    font-weight: 500;
    cursor: pointer;
    appearance: none;
    -webkit-appearance: none;
    -moz-appearance: none;
    min-height: 44px; // Consistent minimum height
    box-sizing: border-box; // Include padding in width calculation
    
    // Custom gradient background for depth
    background-blend-mode: normal, normal, overlay;
    background-color: 
      rgba($dark-bg, 0.9),
      rgba($dark-card, 0.3);
    
    &:focus {
      border-color: $accent-blue;
      outline: none;
      box-shadow: 
        0 0 0 2px rgba($accent-blue, 0.3),
        inset 0 1px 3px rgba(0, 0, 0, 0.2);
      background-color: rgba($dark-bg, 0.95);
      
      // Animated arrow on focus
      background-image: 
        linear-gradient(45deg, transparent 50%, lighten($accent-blue, 15%) 50%),
        linear-gradient(135deg, lighten($accent-blue, 15%) 50%, transparent 50%);
    }
    
    &:hover:not(:focus) {
      border-color: lighten($border-color, 15%);
      background-color: rgba($dark-bg, 0.85);
      transform: translateY(-1px);
      box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
      
      // Subtle arrow color change on hover
      background-image: 
        linear-gradient(45deg, transparent 50%, lighten($accent-blue, 10%) 50%),
        linear-gradient(135deg, lighten($accent-blue, 10%) 50%, transparent 50%);
    }
    
    &:active {
      transform: translateY(0);
      box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.2);
    }
    
    // Style for disabled state
    &:disabled {
      opacity: 0.6;
      cursor: not-allowed;
      background-color: rgba($dark-bg, 0.5);
      
      &:hover {
        transform: none;
        border-color: $border-color;
        box-shadow: none;
      }
    }
    
    // Options styling (limited browser support but adds polish where available)
    option {
      background-color: $dark-card;
      color: $text-primary;
      padding: 0.5rem 1rem;
      border: none;
      font-family: var(--font-poppins);
      
      &:hover, &:focus {
        background-color: rgba($accent-blue, 0.2);
        color: $text-primary;
      }
      
      &:checked {
        background-color: $accent-blue;
        color: white;
        font-weight: 600;
      }
    }
    
    // Firefox specific styling
    @-moz-document url-prefix() {
      background-image: none;
      padding-right: 1rem;
      
      &:after {
        content: 'â–¼';
        position: absolute;
        right: 10px;
        top: 50%;
        transform: translateY(-50%);
        color: $accent-blue;
        font-size: 0.8rem;
        pointer-events: none;
      }
    }
    
    // Mobile-specific dropdown enhancements
    @media (max-width: 768px) {
      padding: 0.85rem 1rem;
      padding-right: 2.5rem;
      font-size: 16px; // Prevent iOS zoom
      
      &:focus {
        // Enhanced focus state for mobile
        box-shadow: 
          0 0 0 3px rgba($accent-blue, 0.4),
          0 4px 12px rgba(0, 0, 0, 0.15);
        transform: translateY(-2px);
      }
    }

    // Ultra-narrow screens: specific optimizations
    @media (max-width: 380px) {
      padding: 0.75rem 0.85rem;
      padding-right: 2.2rem;
      font-size: 16px; // Prevent iOS zoom
      border-radius: 6px;
      min-height: 48px; // Consistent with other inputs
      
      &:focus {
        box-shadow: 
          0 0 0 2px rgba($accent-blue, 0.4),
          0 2px 8px rgba(0, 0, 0, 0.1);
        transform: none; // Disable transform on narrow screens
      }
      
      &:hover {
        transform: none; // Disable hover transform
      }
    }
    
    // Tablet specific adjustments
    @media (min-width: 769px) and (max-width: 1024px) {
      padding: 0.85rem 1.1rem;
      padding-right: 2.7rem;
    }
    
    // High contrast mode support
    @media (prefers-contrast: high) {
      border-width: 2px;
      border-color: $text-primary;
      
      &:focus {
        border-color: $accent-blue;
        box-shadow: 0 0 0 2px $accent-blue;
      }
    }
    
    // Reduced motion support
    @media (prefers-reduced-motion: reduce) {
      transition: none;
      
      &:hover {
        transform: none;
      }
    }
  }

  textarea {
    min-height: 100px;
    resize: vertical;
  }
}

.customOptions {
  display: flex;
  flex-direction: row;
  width: 100%;
  align-items: center;

  // Ultra-narrow screens: stack vertically
  @media (max-width: 380px) {
    flex-direction: column;
    gap: 0.5rem;
    align-items: stretch;
  }

  input {
    width: 90%;
    padding: 0.75rem 1rem;
    margin-right: 0.2rem;
    border-radius: 6px;
    border: 1px solid $border-color;
    background-color: rgba($dark-bg, 0.7);
    color: $text-primary;
    transition: all 0.3s ease;
    font-family: var(--font-poppins);

    // Full width on narrow screens
    @media (max-width: 380px) {
      width: 100%;
      margin-right: 0;
      margin-bottom: 0.5rem;
      padding: 0.65rem 0.85rem;
      font-size: 1rem; // Prevent iOS zoom
    }
    
    &:focus {
      border-color: $accent-blue;
      outline: none;
      box-shadow: 0 0 0 2px rgba($accent-blue, 0.3);
    }
    
    &:hover:not(:focus) {
      border-color: lighten($border-color, 10%);
    }
  }
}

.radioGroup {
  display: flex;
  gap: 1.25rem;
  flex-wrap: wrap;
  margin-top: 0.75rem;

  // Ultra-narrow screens: stack vertically with smaller gaps
  @media (max-width: 380px) {
    flex-direction: column;
    gap: 0.75rem;
  }
}

.radioOption {
  display: flex !important;
  align-items: center;
  cursor: pointer;
  padding: 0.75rem 1rem;
  border-radius: 6px;
  transition: all 0.2s ease;
  border: 2px solid transparent;
  min-height: 48px; // Consistent minimum height
  box-sizing: border-box; // Include padding and border in height

  // Ultra-narrow screens: full width with proper padding
  @media (max-width: 380px) {
    padding: 0.75rem 0.85rem;
    width: 100%;
    min-height: 48px;
  }
  
  input[type="radio"] {
    appearance: none;
    -webkit-appearance: none;
    -moz-appearance: none;
    width: 20px;
    height: 20px;
    min-width: 20px; // Prevent flex shrinking
    min-height: 20px; // Prevent flex shrinking
    border: 2px solid $border-color;
    border-radius: 50%; // Perfect circle
    background-color: rgba($dark-bg, 0.5);
    position: relative;
    cursor: pointer;
    margin-right: 0.75rem;
    transition: all 0.2s ease;
    flex-shrink: 0;
    box-sizing: border-box; // Include border in dimensions
    display: inline-block; // Ensure consistent rendering
    vertical-align: middle; // Align properly with text
    outline: none; // Remove default outline

    // Force consistent circle shape across all devices and browsers
    @media (max-width: 380px) {
      width: 20px;
      height: 20px;
      min-width: 20px;
      min-height: 20px;
      margin-right: 0.75rem;
      border-radius: 50%; // Reaffirm circle shape
    }
    
    // Additional cross-browser resets for perfect circle
    &::-webkit-outer-spin-button,
    &::-webkit-inner-spin-button {
      -webkit-appearance: none;
      margin: 0;
    }
    
    // Firefox specific resets
    &::-moz-focus-inner {
      border: 0;
      padding: 0;
    }
    
    // Ensure the radio button maintains circular shape
    border-style: solid;
    border-width: 2px;
    
    &:checked {
      border-color: $accent-blue;
      background-color: $dark-bg;
      
      &::after {
        content: '';
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        width: 8px;
        height: 8px;
        min-width: 8px;
        min-height: 8px;
        background-color: $accent-blue;
        border-radius: 50%; // Perfect circle for the dot
        box-shadow: 0 0 5px rgba($accent-blue, 0.5);
        display: block; // Ensure the dot is displayed
      }
    }
    
    &:focus {
      box-shadow: 0 0 0 2px rgba($accent-blue, 0.3);
      outline: none;
    }
  }
  
  span {
    font-family: var(--font-poppins);
    color: $text-primary;
    font-weight: 500;
    transition: all 0.2s ease;
    line-height: 1.2;
    font-size: 0.95rem;

    // Consistent text size on narrow screens
    @media (max-width: 380px) {
      font-size: 0.95rem;
    }
  }
  
  &:hover {
    background-color: rgba($accent-blue, 0.1);
    transform: translateY(-1px);
    
    input[type="radio"] {
      border-color: lighten($border-color, 10%);
    }

    // Disable transform on touch devices to prevent layout issues
    @media (max-width: 380px) {
      transform: none;
    }
  }
  
  &:has(input:checked) {
    background-color: rgba($accent-blue, 0.1);
    border-color: rgba($accent-blue, 0.3);
    
    span {
      color: $accent-blue;
    }
  }
}

.checkboxGroup {
  display: flex;
  flex-direction: column;
  gap: 0.75rem;
  margin-top: 0.75rem;
}

.checkboxOption {
  display: flex !important;
  align-items: center;
  cursor: pointer;
  padding: 0.75rem 1rem;
  border-radius: 6px;
  transition: all 0.2s ease;
  border: 2px solid transparent;
  min-height: 48px; // Consistent minimum height
  box-sizing: border-box; // Include padding and border in height

  // Ultra-narrow screens: proper padding
  @media (max-width: 380px) {
    padding: 0.75rem 0.85rem;
    min-height: 48px;
  }
  
  input[type="checkbox"] {
    appearance: none;
    -webkit-appearance: none;
    -moz-appearance: none;
    width: 20px;
    height: 20px;
    min-width: 20px; // Prevent flex shrinking
    min-height: 20px; // Prevent flex shrinking
    border: 2px solid $border-color;
    border-radius: 3px; // Consistent square with slight rounding
    background-color: rgba($dark-bg, 0.5);
    position: relative;
    cursor: pointer;
    margin-right: 0.75rem;
    transition: all 0.2s ease;
    flex-shrink: 0;
    box-sizing: border-box; // Include border in dimensions
    display: inline-block; // Ensure consistent rendering
    vertical-align: middle; // Align properly with text

    // Force consistent square shape across all devices and browsers
    @media (max-width: 380px) {
      width: 20px;
      height: 20px;
      min-width: 20px;
      min-height: 20px;
      margin-right: 0.75rem;
      border-radius: 3px; // Reaffirm square shape
    }
    
    // Additional browser-specific resets for consistent square
    &::-webkit-appearance {
      display: none;
    }
    
    &::-moz-appearance {
      display: none;
    }
    
    &:checked {
      border-color: $accent-blue;
      background-color: $accent-blue;
      
      &::after {
        content: '';
        position: absolute;
        top: 40%;
        left: 50%;
        transform: translate(-50%, -50%) rotate(45deg);
        width: 6px;
        height: 10px;
        border: solid white;
        border-width: 0 2px 2px 0;
        display: block; // Ensure the checkmark is displayed
      }
    }
    
    &:focus {
      box-shadow: 0 0 0 2px rgba($accent-blue, 0.3);
      outline: none;
    }
  }
  
  span {
    font-family: var(--font-poppins);
    color: $text-primary;
    font-weight: 500;
    transition: all 0.2s ease;
    line-height: 1.2;
    font-size: 0.95rem;

    // Consistent text size on narrow screens
    @media (max-width: 380px) {
      font-size: 0.95rem;
    }
  }
  
  &:hover {
    background-color: rgba($accent-blue, 0.1);
    transform: translateY(-1px);
    
    input[type="checkbox"] {
      border-color: lighten($border-color, 10%);
    }

    // Disable transform on touch devices
    @media (max-width: 380px) {
      transform: none;
    }
  }
  
  &:has(input:checked) {
    background-color: rgba($accent-blue, 0.1);
    border-color: rgba($accent-blue, 0.3);
    
    span {
      color: $accent-blue;
    }
  }
}

.formRow {
  display: grid;
  grid-template-columns: 1fr;
  gap: 1.5rem;
  margin-bottom: 1rem;

  @media (min-width: 768px) {
    grid-template-columns: 1fr 1fr;
  }

  // Smaller gap on ultra-narrow screens
  @media (max-width: 380px) {
    gap: 1rem;
    margin-bottom: 0.75rem;
  }
}

.fileUpload {
  display: flex;
  flex-direction: column;
  gap: 1rem;
  margin-top: 0.5rem;
}

.uploadBox {
  border: 2px dashed $border-color;
  border-radius: 8px;
  padding: 2.5rem 2rem;
  text-align: center;
  background-color: rgba($dark-bg, 0.5);
  transition: all 0.3s ease;
  cursor: pointer;
  position: relative;
  overflow: hidden;
  box-shadow: inset 0 0 10px rgba(0, 0, 0, 0.1);

  // Ultra-narrow screens: smaller padding
  @media (max-width: 380px) {
    padding: 1.5rem 1rem;
  }

  &:hover, &.dragActive {
    border-color: $accent-blue;
    background-color: rgba($accent-blue, 0.1);
    transform: translateY(-2px);
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1), inset 0 0 10px rgba(0, 0, 0, 0.1);
  }
  
  &:active {
    transform: translateY(0);
    transition: all 0.1s ease;
  }
  
  svg {
    font-size: 2.5rem;
    color: $accent-blue;
    margin-bottom: 1rem;
    transition: transform 0.3s ease;
    filter: drop-shadow(0 2px 3px rgba(0, 0, 0, 0.2));
  }
  
  &:hover svg {
    transform: scale(1.1) translateY(-5px);
  }

  p {
    margin-top: 1rem;
    color: $text-secondary;
    font-family: var(--font-poppins);
    
    strong {
      color: $accent-blue;
      font-weight: 600;
    }
  }
  
  &::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    height: 3px;
    background: linear-gradient(90deg, transparent, $accent-blue, transparent);
    opacity: 0;
    transition: opacity 0.3s ease;
  }
  
  &:hover::after {
    opacity: 0.5;
  }
}

.uploadedFile {
  display: flex;
  align-items: center;
  gap: 1rem;
  background-color: rgba($dark-bg, 0.7);
  padding: 0.85rem 1.25rem;
  border-radius: 8px;
  margin-bottom: 0.75rem;
  border: 1px solid rgba($border-color, 0.6);
  transition: all 0.2s ease;
  position: relative;
  overflow: hidden;

  // Ultra-narrow screens: smaller padding and gap
  @media (max-width: 380px) {
    padding: 0.7rem 1rem;
    gap: 0.75rem;
    margin-bottom: 0.5rem;
  }
  
  &::before {
    content: '';
    position: absolute;
    left: 0;
    top: 0;
    bottom: 0;
    width: 4px;
    background-color: $accent-blue;
    opacity: 0.7;
  }
  
  &:hover {
    background-color: rgba($dark-bg, 0.8);
    border-color: $border-color;
    transform: translateX(3px);

    // Disable transform on narrow screens
    @media (max-width: 380px) {
      transform: none;
    }
  }

  .fileName {
    flex: 1;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    font-family: var(--font-poppins);
    padding-left: 0.5rem;

    // Smaller font on narrow screens
    @media (max-width: 380px) {
      font-size: 0.9rem;
      padding-left: 0.25rem;
    }
  }

  .removeButton {
    background: none;
    border: none;
    color: $accent-red;
    cursor: pointer;
    transition: all 0.2s ease;
    display: flex;
    align-items: center;
    justify-content: center;
    width: 30px;
    height: 30px;
    border-radius: 50%;
    background-color: rgba($dark-bg, 0.3);

    // Slightly smaller on narrow screens
    @media (max-width: 380px) {
      width: 28px;
      height: 28px;
    }

    &:hover {
      color: lighten($accent-red, 10%);
      background-color: rgba($accent-red, 0.15);
      transform: scale(1.1) rotate(90deg);

      // Less dramatic effect on narrow screens
      @media (max-width: 380px) {
        transform: scale(1.05);
      }
    }
    
    &:active {
      transform: scale(0.95);
    }
  }
}

.tabs {
  display: flex;
  gap: 0.5rem;
  margin-bottom: 1.5rem;
  border-bottom: 1px solid $border-color;
  position: relative;
  overflow-x: auto;
  padding-bottom: 2px;
  
  // Ultra-narrow screens: enable horizontal scrolling with better spacing
  @media (max-width: 380px) {
    gap: 0.25rem;
    margin-bottom: 1rem;
    padding: 0 0.5rem 2px 0.5rem;
    margin-left: -0.5rem;
    margin-right: -0.5rem;
    
    // Hide scrollbar but keep functionality
    &::-webkit-scrollbar {
      height: 0px;
      background: transparent;
    }
  }
  
  &::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    height: 1px;
    background-color: rgba($border-color, 0.5);
  }
}

.tabButton {
  padding: 0.85rem 1.5rem;
  background: none;
  border: none;
  color: $text-secondary;
  cursor: pointer;
  font-weight: 500;
  position: relative;
  font-family: var(--font-poppins);
  white-space: nowrap;
  transition: all 0.25s ease;
  display: flex;
  align-items: center;
  gap: 0.75rem;
  overflow: hidden;
  flex-shrink: 0; // Prevent tabs from shrinking too much
  min-height: 48px; // Consistent minimum height

  // Ultra-narrow screens: consistent sizing
  @media (max-width: 380px) {
    padding: 0.75rem 1rem;
    gap: 0.5rem;
    font-size: 0.9rem;
    min-width: fit-content;
    min-height: 48px;
  }
  
  .tabIcon {
    font-size: 1.35rem;
    transition: transform 0.3s ease;

    // Consistent icon size on narrow screens
    @media (max-width: 380px) {
      font-size: 1.2rem;
    }
  }

  &:after {
    content: '';
    position: absolute;
    bottom: -2px;
    left: 0;
    right: 0;
    height: 3px;
    background-color: transparent;
    transition: background-color 0.3s ease;
    z-index: 1;
  }
  
  &::before {
    content: '';
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    background-color: rgba($accent-blue, 0);
    transition: all 0.25s ease;
    z-index: -1;
    transform: translateY(100%);
  }

  &.active {
    color: $accent-blue;
    font-weight: 600;

    &:after {
      background-color: $accent-blue;
    }
    
    .tabIcon {
      transform: scale(1.2);
      color: $accent-blue;

      // Less dramatic scaling on narrow screens
      @media (max-width: 380px) {
        transform: scale(1.1);
      }
    }
  }

  &:hover:not(.active) {
    color: lighten($text-secondary, 25%);
    transform: translateY(-2px);
    
    // Disable transform on touch devices to prevent layout issues
    @media (max-width: 380px) {
      transform: none;
    }
    
    &:after {
      background-color: rgba($accent-blue, 0.3);
    }
    
    &::before {
      transform: translateY(95%);
      background-color: rgba($accent-blue, 0.05);
    }
    
    .tabIcon {
      transform: translateY(-2px);

      @media (max-width: 380px) {
        transform: none;
      }
    }
  }
  
  &:active:not(.active) {
    transform: translateY(0);
  }
}

.rangeWrapper {
  position: relative;
  padding-bottom: 1.5rem;
  margin-top: 0.5rem;
  padding-top: 0.5rem;

  // Ultra-narrow screens: smaller padding
  @media (max-width: 380px) {
    padding-bottom: 1rem;
    margin-top: 0.25rem;
    padding-top: 0.25rem;
  }

  .rangeValue {
    position: absolute;
    bottom: 0;
    right: 0;
    font-size: 0.95rem;
    color: $accent-blue;
    font-family: var(--font-poppins);
    font-weight: 600;
    background-color: rgba($dark-bg, 0.6);
    padding: 0.2rem 0.5rem;
    border-radius: 4px;
    min-width: 2.5rem;
    text-align: center;

    // Smaller on narrow screens
    @media (max-width: 380px) {
      font-size: 0.85rem;
      padding: 0.1rem 0.4rem;
      min-width: 2rem;
    }
  }

  input[type="range"] {
    width: 100%;
    -webkit-appearance: none;
    appearance: none;
    height: 8px;
    border-radius: 4px;
    background: linear-gradient(to right, rgba($accent-blue, 0.7), rgba($accent-blue, 0.3));
    outline: none;
    margin: 0.75rem 0;
    padding: 0;
    position: relative;
    
    &:focus {
      box-shadow: 0 0 0 2px rgba($accent-blue, 0.3);
    }

    &::-webkit-slider-thumb {
      -webkit-appearance: none;
      appearance: none;
      width: 24px;
      height: 24px;
      border-radius: 50%;
      background: $accent-blue;
      cursor: pointer;
      box-shadow: 0 0 8px rgba(0, 0, 0, 0.3);
      transition: all 0.15s ease;
      border: 2px solid rgba(255, 255, 255, 0.8);
      
      &:hover {
        transform: scale(1.15);
        background: lighten($accent-blue, 5%);
      }
      
      &:active {
        transform: scale(0.95);
        background: darken($accent-blue, 5%);
      }
    }

    &::-moz-range-thumb {
      width: 24px;
      height: 24px;
      border-radius: 50%;
      background: $accent-blue;
      cursor: pointer;
      border: 2px solid rgba(255, 255, 255, 0.8);
      box-shadow: 0 0 8px rgba(0, 0, 0, 0.3);
      transition: all 0.15s ease;
      
      &:hover {
        transform: scale(1.15);
        background: lighten($accent-blue, 5%);
      }
      
      &:active {
        transform: scale(0.95);
        background: darken($accent-blue, 5%);
      }
    }
    
    &::-webkit-slider-runnable-track {
      height: 8px;
      border-radius: 4px;
    }
    
    &::-moz-range-track {
      height: 8px;
      border-radius: 4px;
    }
  }
}

.actionButtons {
  display: flex;
  justify-content: flex-end;
  gap: 1rem;
  margin-top: 2rem;
  
  @media (max-width: 640px) {
    flex-direction: column;
    
    .button {
      width: 100%;
      text-align: center;
    }
  }

  // Ultra-narrow screens: smaller margin and gap
  @media (max-width: 380px) {
    margin-top: 1.5rem;
    gap: 0.75rem;
  }
}

.button {
  padding: 0.85rem 1.75rem;
  border-radius: 6px;
  border: none;
  cursor: pointer;
  font-weight: 600;
  font-size: 1rem;
  transition: all 0.3s ease;
  font-family: var(--font-poppins);
  letter-spacing: 0.5px;
  position: relative;
  overflow: hidden;
  min-height: 48px; // Consistent minimum height
  display: flex;
  align-items: center;
  justify-content: center;

  // Ultra-narrow screens: consistent sizing
  @media (max-width: 380px) {
    padding: 0.75rem 1rem;
    font-size: 0.95rem;
    border-radius: 6px;
    min-height: 48px;
    width: 100%;
  }
  
  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(rgba(255,255,255,0.1), rgba(255,255,255,0));
    opacity: 0;
    transition: opacity 0.3s ease;
  }
  
  &:hover::before {
    opacity: 1;
  }

  &.primary {
    background-color: $accent-blue;
    color: white;
    box-shadow: 0 4px 10px rgba($accent-blue, 0.3);

    &:hover {
      background-color: darken($accent-blue, 5%);
      box-shadow: 0 6px 14px rgba($accent-blue, 0.5);
      transform: translateY(-2px);

      // Disable transform on narrow screens to prevent layout shifts
      @media (max-width: 380px) {
        transform: none;
        box-shadow: 0 4px 12px rgba($accent-blue, 0.4);
      }
    }
    
    &:active {
      transform: translateY(0);
      box-shadow: 0 2px 6px rgba($accent-blue, 0.3);
    }
  }

  &.secondary {
    background-color: rgba($border-color, 0.2);
    color: $text-primary;
    border: 1px solid rgba($border-color, 0.5);

    &:hover {
      background-color: rgba($border-color, 0.3);
      transform: translateY(-2px);

      // Disable transform on narrow screens
      @media (max-width: 380px) {
        transform: none;
        background-color: rgba($border-color, 0.4);
      }
    }
    
    &:active {
      transform: translateY(0);
    }
  }
}

.serverPreview {
  background-color: $dark-card;
  padding: 2rem;
  border-radius: 12px;
  margin-top: 2rem;
  border: 1px solid $border-color;
  box-shadow: 0 8px 24px rgba(0, 0, 0, 0.25);
  background-image: url('/minecraft-server.png');
  background-size: 100px;
  background-repeat: repeat;
  background-blend-mode: overlay;
  position: relative;

  // Ultra-narrow screens optimizations
  @media (max-width: 380px) {
    padding: 1.5rem;
    margin-top: 1.5rem;
    border-radius: 8px;
  }
  
  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgba($dark-card, 0.9);
    z-index: 0;
    border-radius: 12px;

    @media (max-width: 380px) {
      border-radius: 8px;
    }
  }
  
  .sectionTitle {
    position: relative;
    z-index: 1;
  }

  .previewInfo {
    display: grid;
    grid-template-columns: 1fr;
    gap: 1.5rem;
    position: relative;
    z-index: 1;

    @media (min-width: 768px) {
      grid-template-columns: 1fr 1fr;
    }

    // Ultra-narrow screens: smaller gap
    @media (max-width: 380px) {
      gap: 1rem;
    }
  }

  .previewDetail {
    margin-bottom: 0.75rem;
    font-family: var(--font-poppins);
    font-size: 0.95rem;
    display: flex;
    align-items: center;

    // Ultra-narrow screens: smaller font and margin
    @media (max-width: 380px) {
      font-size: 0.85rem;
      margin-bottom: 0.5rem;
    }

    span {
      color: $text-secondary;
      margin-right: 0.75rem;
      font-weight: 500;

      @media (max-width: 380px) {
        margin-right: 0.5rem;
      }
    }
    
    svg {
      margin-right: 0.5rem;
      color: $accent-blue;

      @media (max-width: 380px) {
        margin-right: 0.25rem;
        width: 16px;
        height: 16px;
      }
    }
  }
}

// Utility classes for mobile optimization
.no-select {
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.touch-action-manipulation {
  touch-action: manipulation;
}

// Ultra-narrow screen-specific utility classes
@media (max-width: 380px) {
  .mobile-stack {
    flex-direction: column !important;
    align-items: stretch !important;
  }
  
  .mobile-full-width {
    width: 100% !important;
  }
  
  .mobile-compact {
    padding: 0.5rem !important;
    margin: 0.25rem 0 !important;
  }
  
  .mobile-text-small {
    font-size: 0.85rem !important;
  }
}

// Mobile-friendly touch targets and focus styles
.mobileOptimized {
  @media (max-width: 380px) {
    // Ensure tap targets are at least 44px (Apple's recommendation)
    button, input, select, textarea {
      min-height: 44px;
    }
    
    // Exception for range inputs which are handled differently
    input[type="range"] {
      min-height: auto;
      min-width: auto;
    }
  }
}